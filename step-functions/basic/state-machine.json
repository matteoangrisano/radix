{
	"Comment": "Basic example demonstrating various state types of the Amazon States Language",
	"StartAt": "Lambda Invoke",
	"States": {
		"Lambda Invoke": {
			"Type": "Task",
			"Resource": "arn:aws:states:::lambda:invoke",
			"OutputPath": "$.Payload",
			"Parameters": {
				"FunctionName": "arn:aws:lambda:eu-west-1:779006152863:function:basicExample"
			},
			"Retry": [
				{
					"ErrorEquals": ["Lambda.ServiceException", "Lambda.AWSLambdaException", "Lambda.SdkClientException"],
					"IntervalSeconds": 2,
					"MaxAttempts": 6,
					"BackoffRate": 2
				}
			],
			"Next": "Pass"
		},
		"Pass": {
			"Comment": "A Pass state passes its input to its output, without performing work. Pass states are useful when constructing and debugging state machines.",
			"Type": "Pass",
			"Next": "Is Example True?"
		},
		"Is Example True?": {
			"Comment": "A Choice state adds branching logic to a state machine. Choice rules can implement 16 different comparison operators, and can be combined using And, Or, and Not",
			"Type": "Choice",
			"Choices": [
				{
					"Variable": "$",
					"BooleanEquals": true,
					"Next": "Yes"
				},
				{
					"Variable": "$",
					"BooleanEquals": false,
					"Next": "No"
				}
			],
			"Default": "Yes"
		},
		"Yes": {
			"Type": "Pass",
			"Next": "Wait 3 sec"
		},
		"No": {
			"Type": "Fail",
			"Cause": "Example: false"
		},
		"Wait 3 sec": {
			"Comment": "A Wait state delays the state machine from continuing for a specified time.",
			"Type": "Wait",
			"Seconds": 3,
			"Next": "Parallel State"
		},
		"Parallel State": {
			"Comment": "A Parallel state can be used to create parallel branches of execution in your state machine.",
			"Type": "Parallel",
			"Next": "Hello World",
			"Branches": [
				{
					"StartAt": "Hello",
					"States": {
						"Hello": {
							"Type": "Pass",
							"End": true
						}
					}
				},
				{
					"StartAt": "World",
					"States": {
						"World": {
							"Type": "Pass",
							"End": true
						}
					}
				}
			]
		},
		"Hello World": {
			"Type": "Pass",
			"End": true
		}
	}
}
